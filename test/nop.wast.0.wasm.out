(module
  (memory $memory0 1)
  (export "as-func-first" (func $func2))
  (export "as-func-mid" (func $func3))
  (export "as-func-last" (func $func4))
  (export "as-func-everywhere" (func $func5))
  (export "as-drop-last" (func $func6))
  (export "as-drop-everywhere" (func $func7))
  (export "as-select-mid1" (func $func8))
  (export "as-select-mid2" (func $func9))
  (export "as-select-last" (func $func10))
  (export "as-select-everywhere" (func $func11))
  (export "as-block-first" (func $func12))
  (export "as-block-mid" (func $func13))
  (export "as-block-last" (func $func14))
  (export "as-block-everywhere" (func $func15))
  (export "as-loop-first" (func $func16))
  (export "as-loop-mid" (func $func17))
  (export "as-loop-last" (func $func18))
  (export "as-loop-everywhere" (func $func19))
  (export "as-if-condition" (func $func20))
  (export "as-if-then" (func $func21))
  (export "as-if-else" (func $func22))
  (export "as-br-last" (func $func23))
  (export "as-br-everywhere" (func $func24))
  (export "as-br_if-mid" (func $func25))
  (export "as-br_if-last" (func $func26))
  (export "as-br_if-everywhere" (func $func27))
  (export "as-br_table-mid" (func $func28))
  (export "as-br_table-last" (func $func29))
  (export "as-br_table-everywhere" (func $func30))
  (export "as-return-last" (func $func31))
  (export "as-return-everywhere" (func $func32))
  (export "as-call-mid1" (func $func33))
  (export "as-call-mid2" (func $func34))
  (export "as-call-last" (func $func35))
  (export "as-call-everywhere" (func $func36))
  (export "as-unary-last" (func $func37))
  (export "as-unary-everywhere" (func $func38))
  (export "as-binary-mid" (func $func39))
  (export "as-binary-last" (func $func40))
  (export "as-binary-everywhere" (func $func41))
  (export "as-test-last" (func $func42))
  (export "as-test-everywhere" (func $func43))
  (export "as-compare-mid" (func $func44))
  (export "as-compare-last" (func $func45))
  (export "as-compare-everywhere" (func $func46))
  (export "as-grow_memory-last" (func $func47))
  (export "as-grow_memory-everywhere" (func $func48))
  (func $func0
  )
  (func $func1 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    local.get $var0
    local.get $var1
    local.get $var2
    i32.sub
    i32.add
  )
  (func $func2 (result i32)
    nop
    i32.const 1
  )
  (func $func3 (result i32)
    call $func0
    nop
    i32.const 2
  )
  (func $func4 (result i32)
    call $func0
    i32.const 3
    nop
  )
  (func $func5 (result i32)
    nop
    nop
    call $func0
    nop
    i32.const 4
    nop
    nop
  )
  (func $func6 (param $var0 i32)
    local.get $var0
    nop
    drop
  )
  (func $func7 (param $var0 i32)
    nop
    nop
    local.get $var0
    nop
    nop
    drop
  )
  (func $func8 (param $var0 i32) (result i32)
    local.get $var0
    nop
    local.get $var0
    local.get $var0
    select
  )
  (func $func9 (param $var0 i32) (result i32)
    local.get $var0
    local.get $var0
    nop
    local.get $var0
    select
  )
  (func $func10 (param $var0 i32) (result i32)
    local.get $var0
    local.get $var0
    local.get $var0
    nop
    select
  )
  (func $func11 (param $var0 i32) (result i32)
    nop
    local.get $var0
    nop
    nop
    local.get $var0
    nop
    nop
    local.get $var0
    nop
    nop
    select
  )
  (func $func12 (result i32)
    block (result i32)
      nop
      i32.const 2
    end
  )
  (func $func13 (result i32)
    block (result i32)
      call $func0
      nop
      i32.const 2
    end
  )
  (func $func14 (result i32)
    block (result i32)
      nop
      call $func0
      i32.const 3
      nop
    end
  )
  (func $func15 (result i32)
    block (result i32)
      nop
      nop
      call $func0
      nop
      i32.const 4
      nop
      nop
    end
  )
  (func $func16 (result i32)
    loop (result i32)
      nop
      i32.const 2
    end
  )
  (func $func17 (result i32)
    loop (result i32)
      call $func0
      nop
      i32.const 2
    end
  )
  (func $func18 (result i32)
    loop (result i32)
      call $func0
      i32.const 3
      nop
    end
  )
  (func $func19 (result i32)
    loop (result i32)
      nop
      nop
      call $func0
      nop
      i32.const 4
      nop
      nop
    end
  )
  (func $func20 (param $var0 i32)
    local.get $var0
    nop
    if
      call $func0
    end
  )
  (func $func21 (param $var0 i32)
    local.get $var0
    if
      nop
    else
      call $func0
    end
  )
  (func $func22 (param $var0 i32)
    local.get $var0
    if
      call $func0
    else
      nop
    end
  )
  (func $func23 (param $var0 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      nop
      br $label0
    end $label0
  )
  (func $func24 (param $var0 i32) (result i32)
    block $label0 (result i32)
      nop
      nop
      local.get $var0
      nop
      nop
      br $label0
    end $label0
  )
  (func $func25 (param $var0 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      nop
      local.get $var0
      br_if $label0
    end $label0
  )
  (func $func26 (param $var0 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      local.get $var0
      nop
      br_if $label0
    end $label0
  )
  (func $func27 (param $var0 i32) (result i32)
    block $label0 (result i32)
      nop
      nop
      local.get $var0
      nop
      nop
      local.get $var0
      nop
      nop
      br_if $label0
    end $label0
  )
  (func $func28 (param $var0 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      nop
      local.get $var0
      br_table $label0 $label0
    end $label0
  )
  (func $func29 (param $var0 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      local.get $var0
      nop
      br_table $label0 $label0
    end $label0
  )
  (func $func30 (param $var0 i32) (result i32)
    block $label0 (result i32)
      nop
      nop
      local.get $var0
      nop
      nop
      local.get $var0
      nop
      nop
      br_table $label0 $label0
    end $label0
  )
  (func $func31 (param $var0 i32) (result i32)
    local.get $var0
    nop
    return
  )
  (func $func32 (param $var0 i32) (result i32)
    nop
    nop
    local.get $var0
    nop
    nop
    return
  )
  (func $func33 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    local.get $var0
    nop
    local.get $var1
    local.get $var2
    call $func1
  )
  (func $func34 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    local.get $var0
    local.get $var1
    nop
    local.get $var2
    call $func1
  )
  (func $func35 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    local.get $var0
    local.get $var1
    local.get $var2
    nop
    call $func1
  )
  (func $func36 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    nop
    nop
    local.get $var0
    nop
    nop
    local.get $var1
    nop
    nop
    local.get $var2
    nop
    nop
    call $func1
  )
  (func $func37 (param $var0 i32) (result i32)
    local.get $var0
    nop
    i32.ctz
  )
  (func $func38 (param $var0 i32) (result i32)
    nop
    nop
    local.get $var0
    nop
    nop
    i32.ctz
  )
  (func $func39 (param $var0 i32) (result i32)
    local.get $var0
    nop
    local.get $var0
    i32.add
  )
  (func $func40 (param $var0 i32) (result i32)
    local.get $var0
    local.get $var0
    nop
    i32.add
  )
  (func $func41 (param $var0 i32) (result i32)
    nop
    local.get $var0
    nop
    nop
    local.get $var0
    nop
    nop
    i32.add
  )
  (func $func42 (param $var0 i32) (result i32)
    local.get $var0
    nop
    i32.eqz
  )
  (func $func43 (param $var0 i32) (result i32)
    nop
    nop
    local.get $var0
    nop
    nop
    i32.eqz
  )
  (func $func44 (param $var0 i32) (result i32)
    local.get $var0
    nop
    local.get $var0
    i32.ne
  )
  (func $func45 (param $var0 i32) (result i32)
    local.get $var0
    local.get $var0
    nop
    i32.lt_u
  )
  (func $func46 (param $var0 i32) (result i32)
    nop
    local.get $var0
    nop
    nop
    local.get $var0
    nop
    nop
    i32.le_s
  )
  (func $func47 (param $var0 i32) (result i32)
    local.get $var0
    nop
    memory.grow
  )
  (func $func48 (param $var0 i32) (result i32)
    nop
    nop
    local.get $var0
    nop
    nop
    memory.grow
  )
)
