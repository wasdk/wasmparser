(module
  (export "empty" (func $func1))
  (export "singular" (func $func2))
  (export "multi" (func $func3))
  (export "nested" (func $func4))
  (export "as-unary-operand" (func $func5))
  (export "as-binary-operand" (func $func6))
  (export "as-test-operand" (func $func7))
  (export "as-compare-operand" (func $func8))
  (export "break-bare" (func $func9))
  (export "break-value" (func $func10))
  (export "effects" (func $func11))
  (func $func0
  )
  (func $func1 (param $var0 i32)
    local.get $var0
    if
    end
    local.get $var0
    if
    end
    local.get $var0
    if
    end
    local.get $var0
    if
    end
  )
  (func $func2 (param $var0 i32) (result i32)
    local.get $var0
    if
      nop
    end
    local.get $var0
    if
      nop
    else
      nop
    end
    local.get $var0
    if (result i32)
      i32.const 7
    else
      i32.const 8
    end
  )
  (func $func3 (param $var0 i32) (result i32)
    local.get $var0
    if
      call $func0
      call $func0
      call $func0
    end
    local.get $var0
    if
    else
      call $func0
      call $func0
      call $func0
    end
    local.get $var0
    if (result i32)
      call $func0
      call $func0
      i32.const 8
    else
      call $func0
      call $func0
      i32.const 9
    end
  )
  (func $func4 (param $var0 i32) (param $var1 i32) (result i32)
    local.get $var0
    if (result i32)
      local.get $var1
      if
        call $func0
        block
        end
        nop
      end
      local.get $var1
      if
      else
        call $func0
        block
        end
        nop
      end
      local.get $var1
      if (result i32)
        call $func0
        i32.const 9
      else
        call $func0
        i32.const 10
      end
    else
      local.get $var1
      if
        call $func0
        block
        end
        nop
      end
      local.get $var1
      if
      else
        call $func0
        block
        end
        nop
      end
      local.get $var1
      if (result i32)
        call $func0
        i32.const 10
      else
        call $func0
        i32.const 11
      end
    end
  )
  (func $func5 (param $var0 i32) (result i32)
    local.get $var0
    if (result i32)
      call $func0
      i32.const 13
    else
      call $func0
      i32.const -13
    end
    i32.ctz
  )
  (func $func6 (param $var0 i32) (param $var1 i32) (result i32)
    local.get $var0
    if (result i32)
      call $func0
      i32.const 3
    else
      call $func0
      i32.const -3
    end
    local.get $var1
    if (result i32)
      call $func0
      i32.const 4
    else
      call $func0
      i32.const -5
    end
    i32.mul
  )
  (func $func7 (param $var0 i32) (result i32)
    local.get $var0
    if (result i32)
      call $func0
      i32.const 13
    else
      call $func0
      i32.const 0
    end
    i32.eqz
  )
  (func $func8 (param $var0 i32) (param $var1 i32) (result i32)
    local.get $var0
    if (result f32)
      call $func0
      f32.const 3
    else
      call $func0
      f32.const -3
    end
    local.get $var1
    if (result f32)
      call $func0
      f32.const 4
    else
      call $func0
      f32.const -4
    end
    f32.gt
  )
  (func $func9 (result i32)
    i32.const 1
    if $label0
      br $label0
      unreachable
    end $label0
    i32.const 1
    if $label1
      br $label1
      unreachable
    else
      unreachable
    end $label1
    i32.const 0
    if $label2
      unreachable
    else
      br $label2
      unreachable
    end $label2
    i32.const 1
    if $label3
      i32.const 1
      br_if $label3
      unreachable
    end $label3
    i32.const 1
    if $label4
      i32.const 1
      br_if $label4
      unreachable
    else
      unreachable
    end $label4
    i32.const 0
    if $label5
      unreachable
    else
      i32.const 1
      br_if $label5
      unreachable
    end $label5
    i32.const 1
    if $label6
      i32.const 0
      br_table $label6
      unreachable
    end $label6
    i32.const 1
    if $label7
      i32.const 0
      br_table $label7
      unreachable
    else
      unreachable
    end $label7
    i32.const 0
    if $label8
      unreachable
    else
      i32.const 0
      br_table $label8
      unreachable
    end $label8
    i32.const 19
  )
  (func $func10 (param $var0 i32) (result i32)
    local.get $var0
    if $label0 (result i32)
      i32.const 18
      br $label0
      i32.const 19
    else
      i32.const 21
      br $label0
      i32.const 20
    end $label0
  )
  (func $func11 (param $var0 i32) (result i32)
    (local $var1 i32)
    block (result i32)
      i32.const 1
      local.set $var1
      local.get $var0
    end
    if $label0
      local.get $var1
      i32.const 3
      i32.mul
      local.set $var1
      local.get $var1
      i32.const 5
      i32.sub
      local.set $var1
      local.get $var1
      i32.const 7
      i32.mul
      local.set $var1
      br $label0
      local.get $var1
      i32.const 100
      i32.mul
      local.set $var1
    else
      local.get $var1
      i32.const 5
      i32.mul
      local.set $var1
      local.get $var1
      i32.const 7
      i32.sub
      local.set $var1
      local.get $var1
      i32.const 3
      i32.mul
      local.set $var1
      br $label0
      local.get $var1
      i32.const 1000
      i32.mul
      local.set $var1
    end $label0
    local.get $var1
  )
)
