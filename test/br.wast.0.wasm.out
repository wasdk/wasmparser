(module
  (table $table0 1 1 anyfunc)
  (memory $memory0 1)
  (export "type-i32" (func $func1))
  (export "type-i64" (func $func2))
  (export "type-f32" (func $func3))
  (export "type-f64" (func $func4))
  (export "type-i32-value" (func $func5))
  (export "type-i64-value" (func $func6))
  (export "type-f32-value" (func $func7))
  (export "type-f64-value" (func $func8))
  (export "as-block-first" (func $func9))
  (export "as-block-mid" (func $func10))
  (export "as-block-last" (func $func11))
  (export "as-block-value" (func $func12))
  (export "as-loop-first" (func $func13))
  (export "as-loop-mid" (func $func14))
  (export "as-loop-last" (func $func15))
  (export "as-br-value" (func $func16))
  (export "as-br_if-cond" (func $func17))
  (export "as-br_if-value" (func $func18))
  (export "as-br_if-value-cond" (func $func19))
  (export "as-br_table-index" (func $func20))
  (export "as-br_table-value" (func $func21))
  (export "as-br_table-value-index" (func $func22))
  (export "as-return-value" (func $func23))
  (export "as-if-cond" (func $func24))
  (export "as-if-then" (func $func25))
  (export "as-if-else" (func $func26))
  (export "as-select-first" (func $func27))
  (export "as-select-second" (func $func28))
  (export "as-select-cond" (func $func29))
  (export "as-call-first" (func $func31))
  (export "as-call-mid" (func $func32))
  (export "as-call-last" (func $func33))
  (export "as-call_indirect-func" (func $func34))
  (export "as-call_indirect-first" (func $func35))
  (export "as-call_indirect-mid" (func $func36))
  (export "as-call_indirect-last" (func $func37))
  (export "as-set_local-value" (func $func38))
  (export "as-load-address" (func $func39))
  (export "as-loadN-address" (func $func40))
  (export "as-store-address" (func $func41))
  (export "as-store-value" (func $func42))
  (export "as-storeN-address" (func $func43))
  (export "as-storeN-value" (func $func44))
  (export "as-unary-operand" (func $func45))
  (export "as-binary-left" (func $func46))
  (export "as-binary-right" (func $func47))
  (export "as-test-operand" (func $func48))
  (export "as-compare-left" (func $func49))
  (export "as-compare-right" (func $func50))
  (export "as-convert-operand" (func $func51))
  (export "as-grow_memory-size" (func $func52))
  (export "nested-block-value" (func $func53))
  (export "nested-br-value" (func $func54))
  (export "nested-br_if-value" (func $func55))
  (export "nested-br_if-value-cond" (func $func56))
  (export "nested-br_table-value" (func $func57))
  (export "nested-br_table-value-index" (func $func58))
  (elem (i32.const 0) $func30)
  (func $func0
  )
  (func $func1
    block $label0
      br $label0
      i32.ctz
      drop
    end $label0
  )
  (func $func2
    block $label0
      br $label0
      i64.ctz
      drop
    end $label0
  )
  (func $func3
    block $label0
      br $label0
      f32.neg
      drop
    end $label0
  )
  (func $func4
    block $label0
      br $label0
      f64.neg
      drop
    end $label0
  )
  (func $func5 (result i32)
    block $label0 (result i32)
      i32.const 1
      br $label0
      i32.ctz
    end $label0
  )
  (func $func6 (result i64)
    block $label0 (result i64)
      i64.const 2
      br $label0
      i64.ctz
    end $label0
  )
  (func $func7 (result f32)
    block $label0 (result f32)
      f32.const 3
      br $label0
      f32.neg
    end $label0
  )
  (func $func8 (result f64)
    block $label0 (result f64)
      f64.const 4
      br $label0
      f64.neg
    end $label0
  )
  (func $func9
    block $label0
      br $label0
      call $func0
    end $label0
  )
  (func $func10
    block $label0
      call $func0
      br $label0
      call $func0
    end $label0
  )
  (func $func11
    block $label0
      nop
      call $func0
      br $label0
    end $label0
  )
  (func $func12 (result i32)
    block $label0 (result i32)
      nop
      call $func0
      i32.const 2
      br $label0
    end $label0
  )
  (func $func13 (result i32)
    block $label0 (result i32)
      loop (result i32)
        i32.const 3
        br $label0
        i32.const 2
      end
    end $label0
  )
  (func $func14 (result i32)
    block $label0 (result i32)
      loop (result i32)
        call $func0
        i32.const 4
        br $label0
        i32.const 2
      end
    end $label0
  )
  (func $func15 (result i32)
    block $label0 (result i32)
      loop (result i32)
        nop
        call $func0
        i32.const 5
        br $label0
      end
    end $label0
  )
  (func $func16 (result i32)
    block $label0 (result i32)
      i32.const 9
      br $label0
      br $label0
    end $label0
  )
  (func $func17
    block $label0
      br $label0
      br_if $label0
    end $label0
  )
  (func $func18 (result i32)
    block $label0 (result i32)
      i32.const 8
      br $label0
      i32.const 1
      br_if $label0
      drop
      i32.const 7
    end $label0
  )
  (func $func19 (result i32)
    block $label0 (result i32)
      i32.const 6
      i32.const 9
      br $label0
      br_if $label0
      drop
      i32.const 7
    end $label0
  )
  (func $func20
    block $label0
      br $label0
      br_table $label0 $label0 $label0
    end $label0
  )
  (func $func21 (result i32)
    block $label0 (result i32)
      i32.const 10
      br $label0
      i32.const 1
      br_table $label0 $label0 $label0
      i32.const 7
    end $label0
  )
  (func $func22 (result i32)
    block $label0 (result i32)
      i32.const 6
      i32.const 11
      br $label0
      br_table $label0 $label0
      i32.const 7
    end $label0
  )
  (func $func23 (result i64)
    block $label0 (result i64)
      i64.const 7
      br $label0
      return
    end $label0
  )
  (func $func24 (result i32)
    block $label0 (result i32)
      i32.const 2
      br $label0
      if (result i32)
        i32.const 0
      else
        i32.const 1
      end
    end $label0
  )
  (func $func25 (param $var0 i32) (param $var1 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      if (result i32)
        i32.const 3
        br $label0
      else
        local.get $var1
      end
    end $label0
  )
  (func $func26 (param $var0 i32) (param $var1 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      if (result i32)
        local.get $var1
      else
        i32.const 4
        br $label0
      end
    end $label0
  )
  (func $func27 (param $var0 i32) (param $var1 i32) (result i32)
    block $label0 (result i32)
      i32.const 5
      br $label0
      local.get $var0
      local.get $var1
      select
    end $label0
  )
  (func $func28 (param $var0 i32) (param $var1 i32) (result i32)
    block $label0 (result i32)
      local.get $var0
      i32.const 6
      br $label0
      local.get $var1
      select
    end $label0
  )
  (func $func29 (result i32)
    block $label0 (result i32)
      i32.const 0
      i32.const 1
      i32.const 7
      br $label0
      select
    end $label0
  )
  (func $func30 (param $var0 i32) (param $var1 i32) (param $var2 i32) (result i32)
    i32.const -1
  )
  (func $func31 (result i32)
    block $label0 (result i32)
      i32.const 12
      br $label0
      i32.const 2
      i32.const 3
      call $func30
    end $label0
  )
  (func $func32 (result i32)
    block $label0 (result i32)
      i32.const 1
      i32.const 13
      br $label0
      i32.const 3
      call $func30
    end $label0
  )
  (func $func33 (result i32)
    block $label0 (result i32)
      i32.const 1
      i32.const 2
      i32.const 14
      br $label0
      call $func30
    end $label0
  )
  (func $func34 (result i32)
    block $label0 (result i32)
      i32.const 20
      br $label0
      i32.const 1
      i32.const 2
      i32.const 3
      call_indirect (param i32 i32 i32) (result i32)
    end $label0
  )
  (func $func35 (result i32)
    block $label0 (result i32)
      i32.const 0
      i32.const 21
      br $label0
      i32.const 2
      i32.const 3
      call_indirect (param i32 i32 i32) (result i32)
    end $label0
  )
  (func $func36 (result i32)
    block $label0 (result i32)
      i32.const 0
      i32.const 1
      i32.const 22
      br $label0
      i32.const 3
      call_indirect (param i32 i32 i32) (result i32)
    end $label0
  )
  (func $func37 (result i32)
    block $label0 (result i32)
      i32.const 0
      i32.const 1
      i32.const 2
      i32.const 23
      br $label0
      call_indirect (param i32 i32 i32) (result i32)
    end $label0
  )
  (func $func38 (result i32)
    (local $var0 f32)
    block $label0 (result i32)
      i32.const 17
      br $label0
      local.set $var0
      i32.const -1
    end $label0
  )
  (func $func39 (result f32)
    block $label0 (result f32)
      f32.const 1.7000000476837158
      br $label0
      f32.load
    end $label0
  )
  (func $func40 (result i64)
    block $label0 (result i64)
      i64.const 30
      br $label0
      i64.load8_s
    end $label0
  )
  (func $func41 (result i32)
    block $label0 (result i32)
      i32.const 30
      br $label0
      f64.const 7
      f64.store
      i32.const -1
    end $label0
  )
  (func $func42 (result i32)
    block $label0 (result i32)
      i32.const 2
      i32.const 31
      br $label0
      i64.store
      i32.const -1
    end $label0
  )
  (func $func43 (result i32)
    block $label0 (result i32)
      i32.const 32
      br $label0
      i32.const 7
      i32.store8
      i32.const -1
    end $label0
  )
  (func $func44 (result i32)
    block $label0 (result i32)
      i32.const 2
      i32.const 33
      br $label0
      i64.store16
      i32.const -1
    end $label0
  )
  (func $func45 (result f32)
    block $label0 (result f32)
      f32.const 3.4000000953674316
      br $label0
      f32.neg
    end $label0
  )
  (func $func46 (result i32)
    block $label0 (result i32)
      i32.const 3
      br $label0
      i32.const 10
      i32.add
    end $label0
  )
  (func $func47 (result i64)
    block $label0 (result i64)
      i64.const 10
      i64.const 45
      br $label0
      i64.sub
    end $label0
  )
  (func $func48 (result i32)
    block $label0 (result i32)
      i32.const 44
      br $label0
      i32.eqz
    end $label0
  )
  (func $func49 (result i32)
    block $label0 (result i32)
      i32.const 43
      br $label0
      f64.const 10
      f64.le
    end $label0
  )
  (func $func50 (result i32)
    block $label0 (result i32)
      f32.const 10
      i32.const 42
      br $label0
      f32.ne
    end $label0
  )
  (func $func51 (result i32)
    block $label0 (result i32)
      i32.const 41
      br $label0
      i32.wrap_i64
    end $label0
  )
  (func $func52 (result i32)
    block $label0 (result i32)
      i32.const 40
      br $label0
      memory.grow
    end $label0
  )
  (func $func53 (result i32)
    i32.const 1
    block $label0 (result i32)
      call $func0
      i32.const 4
      i32.const 8
      br $label0
      i32.add
    end $label0
    i32.add
  )
  (func $func54 (result i32)
    i32.const 1
    block $label0 (result i32)
      i32.const 2
      drop
      block $label1 (result i32)
        i32.const 4
        drop
        i32.const 8
        br $label0
        br $label1
      end $label1
      drop
      i32.const 16
    end $label0
    i32.add
  )
  (func $func55 (result i32)
    i32.const 1
    block $label0 (result i32)
      i32.const 2
      drop
      block $label1 (result i32)
        i32.const 4
        drop
        i32.const 8
        br $label0
        i32.const 1
        br_if $label1
        drop
        i32.const 32
      end $label1
      drop
      i32.const 16
    end $label0
    i32.add
  )
  (func $func56 (result i32)
    i32.const 1
    block $label0 (result i32)
      i32.const 2
      drop
      i32.const 4
      i32.const 8
      br $label0
      br_if $label0
      drop
      i32.const 16
    end $label0
    i32.add
  )
  (func $func57 (result i32)
    i32.const 1
    block $label0 (result i32)
      i32.const 2
      drop
      block $label1 (result i32)
        i32.const 4
        drop
        i32.const 8
        br $label0
        i32.const 1
        br_table $label1
      end $label1
      drop
      i32.const 16
    end $label0
    i32.add
  )
  (func $func58 (result i32)
    i32.const 1
    block $label0 (result i32)
      i32.const 2
      drop
      i32.const 4
      i32.const 8
      br $label0
      br_table $label0
      i32.const 16
    end $label0
    i32.add
  )
)
